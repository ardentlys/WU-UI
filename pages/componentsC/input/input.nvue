<template>
	<view class="wu-page">
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">基础使用</text>
			<view class="wu-demo-block__content">
				<wu-input v-model="text1" placeholder="请输入内容" border="surround" @change="change"></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">可清空内容</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="请输入内容" border="surround" clearable></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">数字键盘</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="请输入内容" border="surround" type="number" clearable></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">密码类型</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="请输入内容" border="surround" password clearable></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">显示下划线</text>
			<view class="wu-demo-block__content">
				<wu-input shape="circle" placeholder="请输入内容" border="surround" clearable></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">禁用状态</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="禁用状态" border="surround" disabled></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">圆形</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="请输入内容" border="surround" shape="circle"></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">前后图标</text>
			<view class="wu-demo-block__content">
				<wu-input placeholder="前置图标" prefixIcon="search"
					prefixIconStyle="font-size: 22px;color: #909399"></wu-input>
			</view>
			<view class="wu-demo-block__content" style="margin-top: 15px;">
				<wu-input placeholder="后置图标" suffixIcon="map-fill" suffixIconStyle="color: #909399"></wu-input>
			</view>
		</view>
		<view class="wu-demo-block">
			<text class="wu-demo-block__title">前后插槽</text>
			<view class="wu-demo-block__content">
				<!-- 注意：由于兼容性差异，如果需要使用前后插槽，nvue下需使用wu-input，非nvue下需使用u-input -->
				<wu-input placeholder="前置插槽">
					<template #prefix>
						<wu-text text="http://" margin="0 3px 0 0" type="tips"></wu-text>
					</template>
				</wu-input>
			</view>
			<view class="wu-demo-block__content" style="margin-top: 15px;">
				<!-- 注意：由于兼容性差异，如果需要使用前后插槽，nvue下需使用wu-input，非nvue下需使用u-input -->
				<wu-input placeholder="后置插槽">
					<template #suffix>
						<wu-code ref="wuCode" @change="codeChange" seconds="20" changeText="X秒重新获取哈哈哈"></wu-code>
						<wu-button @tap="getCode" :text="tips" type="success" size="mini"></wu-button>
					</template>
				</wu-input>
			</view>
		</view>
		<wu-gap
			bgColor="#fff"
			height="50"
		></wu-gap>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				tips: '',
				seconds: 10,
				text1: ''
			}
		},
		watch: {
			value(newValue, oldValue) {
				// console.log('v-model', newValue);
			}
		},
		methods: {
			codeChange(text) {
				this.tips = text;
			},
			getCode() {
				if (this.$refs.wuCode.canGetCode) {
					// 模拟向后端请求验证码
					uni.showLoading({
						title: '正在获取验证码'
					})
					setTimeout(() => {
						uni.hideLoading();
						// 这里此提示会被this.start()方法中的提示覆盖
						uni.$w.toast('验证码已发送');
						// 通知验证码组件内部开始倒计时
						this.$refs.wuCode.start();
					}, 2000);
				} else {
					uni.$w.toast('倒计时结束后再发送');
				}
			},
			change(e) {
				console.log('change', e);
			}
		}
	}
</script>

<style lang="scss">
	.wu-demo-block {

		.wu-demo-block__title {
			font-size: 32rpx;
			color: #999999;
		}

		.wu-demo-block__content .wu-input {
			margin-top: 15rpx;
			border: 1px solid #999999;
		}
	}
</style>