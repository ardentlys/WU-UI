import { $ux } from '../../index.uts'

export const UxNavBarMixin = defineMixin({
	data() {
		return {
			height: uni.getSystemInfoSync().statusBarHeight + 44,
		}
	},
	props: {
		// 标题
		title: {
			type: String,
			default: ''
		},
		// 标题居左
		alignLeft: {
			type: Boolean,
			default: false
		},
		// 标题颜色
		color: {
			type: String,
			default: $ux.theme.title
		},
		// 字体大小
		size: {
			type: Number,
			default: 15
		},
		// 字体加粗
		bold: {
			type: Boolean,
			default: true
		},
		// 显示下边框
		border: {
			type: Boolean,
			default: true
		},
		// 下边框颜色
		borderColor: {
			type: String,
			default: $ux.theme.border
		},
		// 渐变色
		colors: {
			type: Array,
			default: ():string[] => {
				return [] as string[]
			}
		},
		// 显示返回按钮
		goback: {
			type: Boolean,
			default: true
		},
		// 返回按钮文字
		gobackText: {
			type: String,
			default: ''
		},
		// 层级z-index
		zIndex: {
			type: Number,
			default: 10000
		},
		// 固定定位
		fixed: {
			type: Boolean,
			default: false
		},
	},
	computed: {
		style(): any | null {
			let css = new Map<string, any | null>()
			
			css.set('height', `${this.height}px`)
			css.set('z-index', this.zIndex)
			
			if(this.border) {
				css.set('border-bottom', `1rpx solid ${ this.borderColor }`)
			}
			
			let colors = [] as string[]
			
			this.colors.forEach((e:any | null) => {
				colors.push(e! as string)
			})
			
			if(colors.length == 0) {
				css.set('background-color', $ux.theme.theme == null || $ux.theme.theme! == ''?'#FFFFFF' : $ux.theme.theme!)
			} else if(colors.length == 1) {
				css.set('background-color', colors[0])
			} else {
				css.set('background', `linear-gradient(to bottom, ${colors.join(',')})`)
			}
			
			return css
		},
		titleStyle(): any | null {
			let css = new Map<string, any | null>()
			
			css.set('color', this.color)
			css.set('font-size', $ux.Util.addUnit(this.size))
			css.set('height', `${$ux.Util.addUnit(this.size + 4)}`)
			css.set('font-weight', this.bold?'bold':'normal')
			
			return css
		}
	},
	methods: {
		onBack() {
			uni.navigateBack({
				delta : 1
			})
		}
	},
})