<template>
	<view v-show="display" class="ux-transition" :class="className" :style="[style, xstyle]">
		<slot></slot>
	</view>
</template>

<script>
	import { UxTransitionMixin } from './index.uts'
	
	/**
	 * transition  过渡动画组件
	 * @description 过渡动画组件
	 * @tutorial https://www.uxframe.cn/component/basic/transition.html
	 * @property {Boolean}			show = [true|false]			Boolean | 显示状态 （默认 false ）
	 * @property {String}			mode = [fade|zoom|fade-zoom|fade-up|fade-down|fade-left|fade-right|slide-up|slide-down|slide-left|slide-right]			String | 动画模式 （默认 fade ）
	 * @value fade 淡入
	 * @value zoom 缩放
	 * @value fade-zoom 缩放淡入
	 * @value fade-up 上滑淡入
	 * @value fade-left 左滑淡入
	 * @value fade-right 右滑淡入
	 * @value fade-down 下滑淡入
	 * @value slide-up 上滑进入
	 * @value slide-left 左滑进入
	 * @value slide-down 下滑进入
	 * @value slide-right 右滑进入
	 * @property {Number}			duration		Number | 动画的执行时间，单位ms （默认 300 ）
	 * @property {String}			timingFunction = [ease|ease-in|ease-out|ease-in-out|linear|cubic-bezier]	String | 使用的动画过渡函数 （默认 ease-out ）
	 * @value ease 开始缓慢，然后逐渐加速，最后减速结束
	 * @value ease-in 过渡开始时较慢，然后逐渐加速
	 * @value ease-out 过渡开始时较快，然后逐渐减速
	 * @value ease-in-out 过渡开始时较慢，然后加速，最后减速
	 * @value linear 恒定速度，没有加速或减速
	 * @value cubic-bezier 用于自定义 CSS 过渡（transition）的时间函数的函数，它允许你精确地定义过渡效果的速度变化
	 * @property {Array}			xstyle			Array<any> | 自定义样式
	 * @event {Function} 			before-enter	Function | 进入前触发
	 * @event {Function} 			enter			Function | 进入中触发
	 * @event {Function} 			after-enter		Function | 进入后触发
	 * @event {Function} 			before-leave	Function | 离开前触发
	 * @event {Function} 			leave			Function | 离开中触发
	 * @event {Function} 			after-leave		Function | 离开后触发
	 * @author UxFrame
	 * @date 2023-11-02 11:35:16
	 */
	export default {
		name: 'ux-transition',
		mixins: [UxTransitionMixin]
	}
</script>

<style lang="scss">
	$zoom-scale: scale(0);
	
	.ux-transition {
		position: absolute;
		
		&__fade-enter-active,
		&__fade-leave-active {
			transition-property: opacity;
		}
		
		&__fade-enter,
		&__fade-leave-to {
			opacity: 0
		}
		
		&__fade-enter-to {
			opacity: 1
		}
		
		&__fade-zoom-enter {
			transform: $zoom-scale;
			opacity: 0;
		}
		
		&__fade-zoom-leave-to {
			transform: $zoom-scale;
			opacity: 0;
		}
		
		&__fade-zoom-enter-active,
		&__fade-zoom-leave-active {
			transition-property: transform, opacity;
		}
		
		&__fade-down-enter-active,
		&__fade-down-leave-active,
		&__fade-left-enter-active,
		&__fade-left-leave-active,
		&__fade-right-enter-active,
		&__fade-right-leave-active,
		&__fade-up-enter-active,
		&__fade-up-leave-active {
			transition-property: opacity, transform;
		}
		
		&__fade-up-enter,
		&__fade-up-leave-to {
			transform: translate(0, 100%);
			opacity: 0
		}
		
		&__fade-down-enter,
		&__fade-down-leave-to {
			transform: translate(0, -100%);
			opacity: 0
		}
		
		&__fade-left-enter,
		&__fade-left-leave-to {
			transform: translate(-100%, 0);
			opacity: 0
		}
		
		&__fade-right-enter,
		&__fade-right-leave-to {
			transform: translate(100%, 0);
			opacity: 0
		}
		
		&__slide-down-enter-active,
		&__slide-down-leave-active,
		&__slide-left-enter-active,
		&__slide-left-leave-active,
		&__slide-right-enter-active,
		&__slide-right-leave-active,
		&__slide-up-enter-active,
		&__slide-up-leave-active {
			transition-property: transform;
		}
		
		&__slide-up-enter,
		&__slide-up-leave-to {
			transform: translate(0, 100%)
		}
		
		&__slide-down-enter,
		&__slide-down-leave-to {
			transform: translate(0, -100%)
		}
		
		&__slide-left-enter,
		&__slide-left-leave-to {
			transform: translate(-100%, 0)
		}
		
		&__slide-right-enter,
		&__slide-right-leave-to {
			transform: translate(100%, 0)
		}
		
		&__zoom-enter-active,
		&__zoom-leave-active {
			transition-property: transform
		}
		
		&__zoom-enter,
		&__zoom-leave-to {
			transform: $zoom-scale
		}
	}
</style>