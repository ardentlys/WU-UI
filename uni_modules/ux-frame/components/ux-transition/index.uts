export const UxTransitionMixin = defineMixin({
	emits: ['before-enter', 'enter', 'after-enter', 'before-leave', 'leave', 'after-leave'],
	data() {
		return {
			display: false,
			className: '',
			timer: 0,
			isFirst: true,
		}
	},
	props: {
		// 显示状态
		show: {
		    type: Boolean,
		    default: false
		},
		// 动画模式
		mode: {
		    type: String,
		    default: 'fade'
		},
		// 执行时间，单位ms
		duration: {
		    type: Number,
		    default: 300
		},
		// 过渡函数
		timingFunction: {
		    type: String,
		    default: 'ease-out'
		},
		// 自定义样式
		xstyle: {
			type: Array as PropType<Array<any>>,
			default: () : Array<any> => [] as Array<any>
		}
	},
	computed: {
		style(): any | null {
			let css = new Map<string, any | null>()
			
			css.set('transition-duration', `${this.duration}ms`)
			css.set('transition-timing-function', this.timingFunction)
			
			return css
		},
	},
	watch: {
		show: {
			immediate: true,
			handler(newVal: boolean) {
				clearTimeout(this.timer)
				
				if(newVal) {
					this.display = false
					
					this.enter()
				} else {
					if(this.isFirst) {
						this.isFirst = false
					} else {
						this.leave()
					}
				}
			}
		}
	},
	methods: {
		/**
		 * 动画类名
		 */
		setClasss(key: string) {
			let mode = `ux-transition__${this.mode}`
			
			this.className = ({
				'enter': `${mode}-enter ${mode}-enter-active`,
				'enter-to': `${mode}-enter-to ${mode}-enter-active`,
				'leave': `${mode}-leave ${mode}-leave-active`,
				'leave-to': `${mode}-leave-to ${mode}-leave-active`
			} as UTSJSONObject)[key] as string
		},
		/**
		 * 进场动画
		 */
		enter() {
			this.$emit('before-enter')
			
			this.setClasss('enter')
			this.$nextTick(() => {
				this.display = true
				
				setTimeout(() => {
					this.$emit('enter')
					this.setClasss('enter-to')
					
					this.$nextTick(() => {
						this.$emit('after-enter')
					})
				}, 50);
			})
		},
		/**
		 * 离场动画
		 */
		leave() {
			this.$emit('before-leave')
			
			this.setClasss('leave')
			this.$nextTick(() => {
				this.$emit('leave')
				this.setClasss('leave-to')
				
				this.timer = setTimeout(() => {
					this.display = false
					this.$emit('after-leave')
				}, this.duration)
			})
		},
	}
})