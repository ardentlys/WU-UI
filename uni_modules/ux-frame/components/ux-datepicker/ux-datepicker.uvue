<template>
	<ux-drawer ref="uxDrawer" direction="top" :height="height" :touch="touchClose" :opacity="opacity"
		:maskClose="maskClose" :border="false" @close="close">
		<view @click="click()">
			<slot></slot>
		</view>

		<template v-slot:drawer>
			<view class="ux-picker" :style="[style]">
				<view class="ux-picker__title" :style="titleBorder">
					<text v-if="title != ''" class="ux-picker__title--text" :style="titleStyle">{{ title }}</text>
					<view
						:class="btnType == 'normal' || title != '' ? 'ux-picker__btn--cancel' : 'ux-picker__btn--cancel--bigger'"
						hover-class="ux-picker__hover" :hover-start-time="20" :hover-stay-time="200" @click="close()">
						<text class="ux-picker__btn--text" :style="[cancelStyle]">取消</text>
					</view>
					<view
						:class="btnType == 'normal' || title != '' ? 'ux-picker__btn--confirm' : 'ux-picker__btn--confirm--bigger'"
						:style="confirmBorder" hover-class="ux-picker__hover" :hover-start-time="20"
						:hover-stay-time="200" @click="onConfirm()">
						<text class="ux-picker__btn--text" :style="[confirmStyle]">{{ confirm }}</text>
					</view>
				</view>
				<picker-view v-if="mode != 'calendar'" style="height: 180px;" :indicator-style="indicatorStyle"
					:value="values" @change="change">
					<picker-view-column v-for="(items, i) in datas" :key="i">
						<!-- #ifdef APP -->
						<list-view>
							<list-item v-for="(item, index) in items" :key="index">
								<view class="ux-picker__item">
									<text class="ux-picker__text" :style="textStyle(i, index)">{{ item.name }}</text>
								</view>
							</list-item>
						</list-view>
						<!-- #endif -->
						<!-- #ifndef APP -->
						<view class="ux-picker__item" v-for="(item, index) in items" :key="index">
							<text class="ux-picker__text" :style="textStyle(i, index)">{{ item.name }}</text>
						</view>
						<!-- #endif -->
					</picker-view-column>
				</picker-view>
				<view v-else class="ux-picker__calendar">
					<ux-calendar :value="value" :select-mode="selectMode" :lunar="lunar" :range="range"
						:disabled="disabled" :theme="theme" :format="format" @change="calendarChange"></ux-calendar>
				</view>
			</view>
		</template>
	</ux-drawer>
</template>

<script lang="uts">
	import { UxDatePickerMixin } from './index.uts'

	/**
	 * DatePicker 日期选择器
	 * @description 日期选择器，支持 日历 日期 日期时间 日期分钟 时间 月 年 周 等多种模式
	 * @tutorial https://www.uxframe.cn/component/form/datepicker.html
	 * @property {String}		mode=[calendar|date|datetime|dateminute|time|month|year|week]		String | 模式 (默认 date)
	 * @value calendar 日历
	 * @value date 日期
	 * @value datetime 日期时间
	 * @value dateminute 日期分钟
	 * @value time 时间
	 * @value month 月
	 * @value year 年
	 * @value week 周
	 * @property {String}		format=[yyyy-MM-dd|yyyy/MM/dd|yyyy年MM月dd日|yyyy年MM月dd日 周|yyyy年MM月dd日 星期|yyyy年MM月dd日 礼拜]		String | 格式化规则
	 * @property {Array}		value						string[] | 值 (默认 now)
	 * @property {Array}		range						String[] | 范围 (例如 ['2000-01-01', '2023-12-10'])
	 * @property {Number}		max							Number | 默认年份最大值 (默认 +1)
	 * @property {Number}		min							Number | 默认年份最小值 (默认 -10)
	 * @property {String}		selectMode=[single|muti|range]		String | 选择模式 仅calendar有效 (默认 single)
	 * @value single 单选
	 * @value muti 多选
	 * @value range 范围
	 * @property {Boolean}		lunar=[true|false]			Boolean | 显示农历 仅calendar有效 (默认 true)
	 * @property {Boolean}		touch=[true|false]			Boolean | 滑动翻页 仅calendar有效 (默认 true)
	 * @value true
	 * @value false
	 * @property {String}		theme						String | 主题颜色 (默认 $ux.theme.primary)
	 * @property {String}		title						String | 标题
	 * @property {String}		titleColor					String | 标题颜色 (默认 $ux.theme.main)
	 * @property {Number}		size						Number | 内容大小 (默认 15)
	 * @property {String}		color						String | 内容颜色 (默认 $ux.theme.main)
	 * @property {String}		selectColor					String | 内容选中颜色 (默认 $ux.theme.main)
	 * @property {String}		confirm						String | 确定文字 (默认 确定)
	 * @property {Number}		btnSize						Number | 按钮大小 (默认 14)
	 * @property {String}		btnType=[normal|bigger]		String | 按钮类型 (默认 normal)
	 * @value normal 正常
	 * @value bigger 大按钮
	 * @property {Number}		radius						Number | 圆角 (默认 15)
	 * @property {Number}		opacity						Number | 遮罩透明度 0-1 (默认 0.6)
	 * @property {Boolean}		touchClose=[true|false]		Boolean | 允许滑动关闭 (默认 false)
	 * @value true
	 * @value false
	 * @property {Boolean}		maskClose=[true|false]		Boolean | 遮罩层关闭 (默认 true)
	 * @value true
	 * @value false
	 * @property {Boolean}		disabled=[true|false]		Boolean | 是否禁用 (默认 false)
	 * @value true
	 * @value false
	 * @event {Function}		change						Function(UXDatePickerEvent) | 确定选择时触发
	 * @author UxFrame
	 * @date 2023-11-08 18:00:46
	 */
	export default {
		name: 'ux-picker',
		mixins: [UxDatePickerMixin]
	}
</script>

<style lang="scss">
	.ux-picker {
		width: 100%;
		background-color: white;

		&__title {
			width: 100%;
			height: 40px;
			padding: 0 15px;
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			background-color: white;

			&--text {
				font-size: 13px;
				color: #333;
			}
		}

		&__btn--cancel {
			position: absolute;
			left: 8px;
			padding: 0 13px;
			background-color: white;
		}

		&__btn--cancel--bigger {
			position: absolute;
			left: 0;
			width: 50%;
			height: 100%;
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			background-color: white;
		}

		&__btn--confirm {
			position: absolute;
			right: 8px;
			padding: 0 13px;
			background-color: white;
		}

		&__btn--confirm--bigger {
			position: absolute;
			right: 0;
			width: 50%;
			height: 100%;
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			background-color: white;
		}

		&__btn--text {
			font-size: 14px;
		}

		&__hover {
			background-color: #F0F0F0 !important;
		}
	}

	.ux-picker__calendar {
		width: 100%;
		height: 360px;
	}

	.ux-picker__item {
		height: 35px;
	}

	.ux-picker__text {
		line-height: 35px;
		text-align: center;
		color: black;
	}
</style>