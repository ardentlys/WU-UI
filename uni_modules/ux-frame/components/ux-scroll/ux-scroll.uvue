<template>
	<scroll-view 
		:id="id" 
		ref="ux-scroll" 
		class="ux-scroll" 
		:style="style"
		:direction="direction"
		:bounces="bounces"
		:upper-threshold="upperThreshold"
		:lower-threshold="lowerThreshold"
		:scroll-top="scrollTop"
		:scroll-left="scrollLeft"
		:scroll-into-view="scrollIntoView"
		:scroll-with-animation="scrollWithAnimation" 
		:refresher-enabled="refresherEnabled"
		:refresher-threshold="refresherThreshold"
		:refresher-max-drag-distance="refresherMaxDragDistance"
		refresher-default-style="none"
		:refresher-background="refresherBackground"
		:refresher-triggered="refresherTriggered"
		:show-scrollbar="showScrollbar"
		:custom-nested-scroll="customNestedScroll"
		:nested-scroll-child="nestedScrollChild"
		@refresherpulling="refresherpulling"
		@refresherrefresh="refresherrefresh"
		@refresherrestore="refresherrestore"
		@refresherabort="refresherabort"
		@scrolltoupper="scrolltoupper"
		@scrolltolower="scrolltolower"
		@startnestedscroll="startnestedscroll"
		@nestedprescroll="nestedprescroll"
		@stopnestedscroll="stopnestedscroll"
		@scroll="scroll">
		
		<slot></slot>
		
		<ux-loadmore v-if="loadmoreEnabled" :states="loadmoreStates" :state="loadmoreState"></ux-loadmore>
		
		<ux-placeholder :tabbar="placeholder"></ux-placeholder>
		
		<ux-backtop v-if="backtop && $slots['backtop'] == null" ref="uxBacktop" :parent="id"></ux-backtop>
		<ux-backtop v-if="backtop && $slots['backtop'] != null" ref="uxBacktop" :parent="id">
			<slot name="backtop"></slot>
		</ux-backtop>
		
		<ux-refresher v-if="refresherEnabled" :states="refresherStates" :state="refresherState"></ux-refresher>
	</scroll-view>
</template>

<script>
	import { UxScrollMixin } from './index.uts'
	
	/**
	 * scroll-view 滚动列表
	 * @description 滚动列表
	 * @tutorial https://www.uxframe.cn/component/layout/scroll.html
	 * @property {Slot}			default  						Slot | 默认插槽
	 * @property {Slot}			refresher  						Slot | refresher插槽
	 * @property {Slot}			loadmore  						Slot | loadmore插槽
	 * @property {Slot}			backtop  						Slot | backtop插槽
	 * @property {String}		direction = [none|all|horizontal|vertical]  String | 滚动方向，可取值 none、all、horizontal、vertical (默认 vertical)
	 * @value none 无
	 * @value all 全部
	 * @value horizontal 水平
	 * @value vertical 垂直
	 * @property {Boolean}  	bounces = [true|false]  		Boolean | 控制是否回弹效果 (默认 true)
	 * @property {Number}		upperThreshold  				Number | 距顶部/左边多远时（单位px），触发 scrolltoupper 事件（默认 50 ）
	 * @property {Number} 		lowerThreshold 					Number | 距底部/右边多远时（单位px），触发 scrolltolower 事件 （默认 50 ）
	 * @property {Number} 		scrollTop 						Number | 设置竖向滚动条位置 （默认 0 ）
	 * @property {Number}  		scrollLeft						Number | 设置横向滚动条位置（默认 0）
	 * @property {String}  		scrollIntoView					String | 值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素
	 * @property {Boolean}  	scrollWithAnimation = [true|false]  	Boolean | 是否在设置滚动条位置时使用滚动动画，设置false没有滚动动画 (默认 true)
	 * @property {Boolean}  	refresherEnabled = [true|false]  		Boolean | 开启下拉刷新 (默认 false)
	 * @property {Number}  		refresherThreshold  			Number | 设置下拉刷新阈值（默认 45 ）
	 * @property {Number}		refresherMaxDragDistance		Number | 设置下拉最大拖拽距离（单位px）（默认 80 ）
	 * @property {String}		refresherBackground					String | 设置下拉刷新区域背景颜色 (默认 #FFFFFF)
	 * @property {Boolean}		refresherTriggered = [true|false]	Boolean | 设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发 (默认 false)
	 * @property {Array}		refresherStates						Array | 下拉刷新状态文案
	 * @property {Boolean}  	loadmoreEnabled = [true|false]  	Boolean | 开启上拉加载 (默认 false)
	 * @property {Array}		loadmoreStates						Array | 上拉加载状态文案
	 * @property {Boolean}		showScrollbar = [true|false]		Boolean | 控制是否出现滚动条 (默认 true)
	 * @property {Boolean}		customNestedScroll = [true|false]	Boolean | 子元素是否开启嵌套滚动 将滚动事件与父元素协商处理 (默认 false)
	 * @property {Boolean}		openStartnestedscroll = [true|false]	Boolean | 与子元素开启滚动协商 (默认 false)
	 * @property {String}		nestedScrollChild				String | 嵌套滚动子元素的id属性，不支持ref，scroll-view惯性滚动时会让对应id元素视图进行滚动，子元素滚动时会触发scroll-view的nestedprescroll事件，嵌套子元素需要设置custom-nested-scroll = true 
	 * @property {Boolean}		backtop = [true|false]			Boolean | 显示返回顶部 (默认 false)
	 * @property {Boolean}		placeholder = [true|false]		Boolean | 底部导航栏高度占位 (默认 false)
	 * @property {String}		background						String | 背景颜色 (默认 #FFFFFF)
	 * @property {Array}			xstyle						Array<any> | 自定义样式
	 * @event {Function}		refresherpulling				Function | 下拉刷新控件被下拉
	 * @event {Function}		refresherrefresh				Function | 下拉刷新被触发
	 * @event {Function}		refresherrestore				Function | 下拉刷新被复位
	 * @event {Function}		refresherabort					Function | 下拉刷新被中止
	 * @event {Function}		loadmore						Function | 上拉加载触发
	 * @event {Function}		scrolltoupper					Function | 滚动到顶部/左边，会触发 scrolltoupper 事件
	 * @event {Function}		scrolltolower					Function | 滚动到底部/右边，会触发 scrolltolower 事件
	 * @event {Function}		scroll							Function | 滚动时触发，event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY}
	 * @event {Function}		startnestedscroll				Function | 子元素开始滚动时触发, return ture表示与子元素开启滚动协商 默认return false! event = {node}
	 * @event {Function}		nestedprescroll					Function | 子元素滚动时触发，可执行event.consumed(x,y)告知子元素deltaX、deltaY各消耗多少。子元素将执行差值后的deltaX、deltaY滚动距离。不执行consumed(x,y)则表示父元素不消耗deltaX、deltaY。event = {deltaX, deltaY}
	 * @event {Function}		stopnestedscroll				Function | 子元素滚动结束或意外终止时触发
	 * @author UxFrame
	 * @date 2023-11-02 15:20:35
	 */
	export default {
		name: 'ux-scroll',
		mixins: [UxScrollMixin]
	}
</script>

<style lang="scss">
	.ux-scroll {
		flex: 1;
	}
</style>