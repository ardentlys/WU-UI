
export const UxOverlayMixin = defineMixin({
	emits: ['close'],
	data() {
		return {
			sw: uni.getSystemInfoSync().screenWidth as number,
			sh: uni.getSystemInfoSync().screenHeight as number,
		}
	},
	props: {
		// 显隐状态
		show: {
			type: Boolean,
			default: false
		},
		// 点击遮罩是否关闭
		maskClose: {
			type: Boolean,
			default: true
		},
		// 透明度
		opacity: {
			type: Number,
			default: 0.5
		},
		// 固定透明度
		fixedOpacity: {
			type: Boolean,
			default: true
		},
		// 层级z-index
		zIndex: {
			type: Number,
			default: 10001
		},
	},
	computed: {
		style(): string {
			return `z-index: ${this.zIndex}; background-color: rgba(0,0,0,${this.opacity})`
		}
	},
	watch: {
		show() {
			this.anim()
		},
	},
	methods: {
		anim() {
			let el = this.$refs['ux-overlay'] as Element
			
			if(this.show) {
				el?.style?.setProperty('width', `${this.sw}px`)
				el?.style?.setProperty('height', `${this.sh}px`)
				
				if(this.fixedOpacity) {
					el?.style?.setProperty('background-color', `rgba(0,0,0,${this.opacity})` )
				}
			} else {
				if(this.fixedOpacity) {
					el?.style?.setProperty('background-color', 'rgba(0,0,0,0)')
				}
				
				setTimeout(() => {
					el?.style?.setProperty('width', `${0}px`)
					el?.style?.setProperty('height', `${0}px`)
				}, 200)
			}
		},
		close() {
			if(this.maskClose) {
				this.$emit('close')
			}
		}
	}
})